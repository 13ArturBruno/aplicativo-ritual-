class Node{
	constructor(key, parent =null, 2leftchild=null,rightchild=null){
    	this.key = key;
    	this.parent = parent;
    	this.leftchild = leftchild;
    	this.rightchild = rightchild;
  	}
  
	add(node){
  		if(node.key < this.key){
      		if(this.leftchild == null){			//eu acho que nesse teste deveria ser this.leftchild == null
        		this.leftchild = node;
        		node.parent = this;
      		}
      		else{
            	this.leftchild.add(node);
            }
    	}else {
      		if(this.rightchild == null){
        		this.rightchild = node;
        		node.parent = this;
      		}else{
             	this.rightchild.add(node);
            }
    	}
    }
  
	find (key){
 		if(this.key == key){
 			return this;
    	}else{
         	if(key < this.key){
        		if(this.leftchild !== null){
            		return this.leftchild.find(key);
            	}else{
                  return null;
                }
        	}else{
            	if(this.rightchild !== null){
              		return this.rightchild.find(key);
			  	}else{
                  return null;
                }
			}
      	}
	}
}

const keys = [30, 17, 33, 20, 31];

let root = null;
for(let i=0; i<keys.length; i++){
  if(root==null){
    root = new Node(keys[i]);
  }else{
    root.add(new Node(keys[i]));
  }
}

let foundit = root.find(25);
console.log(foundit.key);
